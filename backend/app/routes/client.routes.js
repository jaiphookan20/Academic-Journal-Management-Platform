module.exports = (app) => {
  const {
    signup,
    verifyEmail,
    login,
    loginRefresh,
    forgotPassword,
    resetPassword,
    editAccount,
    editEmail,
    editCredentials,
    signupByEditor,
    getAllEditors,
    getAllReviewers,
    getAllClientsByName,
    addUserRole,
    removeUserRole
  } = require("../controllers/client.controller.js");

  const ClientController = require("../controllers/client.controller.js");

  var router = require("express").Router();

  const { authorize, authorize_role } = require("../utilities/authorize.js");

  // Create a new Client - Signup
  router.post("/signup", signup);

  // Verify signed up email
  router.get("/verify-email/:token", verifyEmail);

  // Verify signin
  router.post("/signin", login);

  // Reset/Update password after client clicks on the correct link in email
  router.post("/login-refresh/", loginRefresh);

  //Testing role/permission
  router.get("/test-role-authorisation",authorize_role(["Editor", "Editorial Assistant"]));

  //Testing valid user token
  router.get("/test-authorisation", authorize());

  // Send email to a client when requesting to reset password, along with autogenerated time-bound token
  router.post("/forgot-password", forgotPassword);

  // Reset/Update password after client clicks on the correct link in email
  router.post("/reset-password/:token", resetPassword);

  //Edit account details
  router.post("/edit-account", authorize(), editAccount);

  //Edit account email
  router.post("/edit-email", authorize(), editEmail);

  //Edit account login credentials
  router.post("/edit-credentials", authorize(), editCredentials);

  // Create a new Internal Client - Signup
  router.post("/signup/:role", authorize_role(["Editor", "Editorial Assistant"]), signupByEditor);

  // Get All Editors
  router.get("/get-editors",authorize_role(["Editor", "Editorial Assistant"]), getAllEditors);

  // Get All Reviewers
  router.get("/get-reviewers",authorize_role(["Editor"]), getAllReviewers);

  router.post("/add-user-role", authorize_role(["Editor", "Editorial Assistant"]), addUserRole);

  router.delete("/remove-user-role", authorize_role(["Editor", "Editorial Assistant"]), removeUserRole);

  // Get All Clients
  router.get("/get-clients-by-name/:search",authorize_role(["Editor", "Editorial Assistant"]), getAllClientsByName);
  
  app.use("/client", router);
};
